% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eventdrop.R
\name{eventdrop}
\alias{eventdrop}
\title{Create an EventDrop timeline}
\usage{
eventdrop(data = NULL, name = NULL, date = NULL, ..., width = NULL,
  height = NULL, elementId = NULL)
}
\description{
eventdrop provides an interactive \code{d3.js} htmlwidget
for \href{https://github.com/marmelab/EventDrop}{EventDrop}
timelines.
}
\examples{
# install from github
# devtools::install_github("timelyportfolio/eventdropR")

library(eventdropR)

# make some sample data
df <- data.frame(
  # random times 30 days plus or minus current time
  date = Sys.time() + runif(1000, -30, 30) * 24 * 60 * 60,
  # make up five groups
  group = paste0("grp_", LETTERS[runif(1000,1,5)]),
  stringsAsFactors = FALSE
)

# defaults
# date argument not needed since the date is in column date
eventdrop(
  df,
  name = "group" #if df column named "name" would not need
)

# demonstrate how to set some options
eventdrop(
  df,
  name = "group",
  labelsWidth = 150,
  hasBottomAxis = TRUE,
  mouseover = htmlwidgets::JS('function(d){console.log(d)}')
)

# demonstrate how to use with shiny and get events
#  can easily build this into our htmlwidget
ed <- eventdrop(
  df,
  name = "group",
  mouseover = htmlwidgets::JS(
    '
function(d){
  console.log(d);
  if(typeof(Shiny)!=="undefined") {
    Shiny.onInputChange("eventdrop_click", {data:d});
  }
}
'
  )
)

ed

# now integrate in simple shiny app
library(shiny)
shinyApp(
  ui = ed,
  server = function(input, output, session){
    observeEvent(input$eventdrop_click,{
      str(input$eventdrop_click)
    })
  }
)
}

